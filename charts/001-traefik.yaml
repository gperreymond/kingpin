name: 'traefik'
region: 'localhost'
datacenters:
  - 'kingpin'
namespace: 'default'
type: 'service'

image:
  repository: 'traefik'
  tag: 'v2.9.4'

# classic key=value
env: []
# from nomad var
envFromSecrets: []
# from nomad service
envFromServices: []

deployment:
  replicas: 1
  args:
    - '--global.sendAnonymousUsage=false'
    - '--log.level=DEBUG'
    - '--log.format=json'
    - '--ping=true'
    - '--ping.entryPoint=web'
    - '--api.dashboard=true'
    - '--api.insecure=true'
    - '--entrypoints.web.address=:80'
    - '--entryPoints.web.forwardedHeaders.insecure=true'
    - '--entryPoints.metrics.address=:8082'
    - '--providers.nomad=true'
    - '--providers.nomad.exposedByDefault=false'
    - '--providers.nomad.endpoint.address=http://${NOMAD_IP_http}:4646'
    - '--metrics.prometheus=true'
    - '--metrics.prometheus.entryPoint=metrics'
    - '--accesslog=true'
    - '--accesslog.format=json'
    - '--accesslog.fields.defaultmode=keep'
    - '--accesslog.fields.headers.defaultmode=keep'
  resources:
    cpu: 100
    memory: 128

services:
  - name: 'http'
    type: 'static'
    port: 80
    tags:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.services.traefik.loadbalancer.server.scheme=http'
      - 'traefik.http.services.traefik.loadbalancer.server.port=${NOMAD_HOST_PORT_http}'
  - name: 'metrics'
    type: 'to'
    port: 8082
    tags: []
    